---
title: "Félidos de Costa Rica"
format: 
  dashboard:
    orientation: rows
server: shiny
---

```{r}
#| label: carga-paquetes
#| context: setup
#| warning: false
#| message: false


# Carga de paquetes
library(tidyverse)
library(DT)
library(plotly)
library(sf)
library(leaflet)
```

```{r}
#| label: carga-datos
#| context: data


# Carga de datos de registros de presencia de félidos en Costa Rica
felidos <-
  st_read(
    dsn = "felidos.csv",
    options = c(
      "X_POSSIBLE_NAMES=decimalLongitude",
      "Y_POSSIBLE_NAMES=decimalLatitude"
    ),
    quiet = TRUE
  )

# Asignación del CRS WGS84 al objeto felidos
st_crs(felidos) <- 4326
```

# {.sidebar}

```{r}
#| label: panel-widgets-entrada


# Lista ordenada de especies
# con un elemento adicional = "Todas"
lista_especies <- unique(felidos$species)
lista_especies <- sort(lista_especies)
lista_especies <- c("Todas", lista_especies)

# Widget de lista de selección
selectInput(
  inputId = "especie",      # identificador del widget
  label = "Especie",        # etiqueta de la lista
  choices = lista_especies, # lista de opciones para seleccionar de la lista
  selected = "Todas"        # opción seleccionada por defecto
)

# widget de SliderInput de Rango
sliderInput(
  inputId = "meses",
  label = "Meses",
  min = 1,
  max = 12,
  value = c(1, 12)
  )

```

# Registros de presencia

```{r}
#| label: salida-tabla


# Encabezado de nivel 3
h3("Tabla de registros de presencia")
# Línea vacía
HTML("<p>")

# Widget de tabla interactiva
dataTableOutput(
	outputId =  "tabla" # identificador del widget
)
```


```{r}
#| label: salida-mapa

h3("Mapa de registros de presencia")
HTML("<p>")

# Widget de mapa interactivo
leafletOutput(
  outputId = "mapa"
)
```

# Registros de presencia por provincias

```{r}
#| label: salida-grafico

h3("Gráfico de cantidad de registros por provincia")
HTML("<p>")

plotlyOutput(
  outputId = "grafico"
)
```


```{r}
#| label: servidor
#| context: server

# Función reactiva para filtrar los registros de presencia de félidos
# de acuerdo con los filtros especificados por el usuario
filtrar_felidos <- reactive({
  # Valor inicial del objeto que va a retornarse
  felidos_filtrados <- felidos
  
  # Se realiza el filtro, solamente si el usario ha seleccionado 
  # una opción diferente a "Todas" en la lista de selección de especies
  if (input$especie != "Todas") {
    felidos_filtrados <-
      felidos_filtrados |>
      filter(species == input$especie)
  }
  
  felidos_filtrados <-
    felidos_filtrados |>
    filter(month >= input$meses[1])
  
# Filtro por mes máximo
  felidos_filtrados <-
    felidos_filtrados |>
    filter(month >= input$meses[2])

  return(felidos_filtrados)
}) 

# Tabla interactiva de registros de presencia
output$tabla <- renderDataTable({
	# Filtrado del conjunto de datos
  felidos <- filtrar_felidos()
  
  # Tabla interactiva
  felidos |>
    st_drop_geometry() |>
    select(species, locality, eventDate) |>
    datatable(
    	rownames = FALSE,
      colnames = c("Especie", "Localidad", "Fecha"),
      options = list(
      	pageLength = 5,
        language = list(url = '//cdn.datatables.net/plug-ins/1.10.11/i18n/Spanish.json')
      )
    )
})

# Mapa interactivo de registros de presencia
output$mapa <- renderLeaflet({
  felidos <- filtrar_felidos()
  
  leaflet() |>
    addTiles(group = "OSM") |>
    addCircleMarkers(
      data = felidos,
      radius = 4,
      color = "blue",
      fillColor = "blue",
      stroke = FALSE,
      group = "Félidos"
    )
})

# Gráfico interactivo de cantidad de registros por provincia
output$grafico <- renderPlotly({
  felidos <- filtrar_felidos()
  
grafico_ggplot2 <-
  felidos |>
    st_drop_geometry() |>
    group_by(stateProvince) |>
    summarize(n = n()) |>
    ggplot(aes(
      x = reorder(stateProvince, n),
      y = n
    )) +
    geom_col() +
  coord_flip()

ggplotly(grafico_ggplot2) |> config(locale = "es")
})
```